// ===========================================
// 폰트 미리보기 도구 - 사용자 설정 파일
// ===========================================
// 이 파일을 수정하여 폰트와 예시 문구를 설정하세요.
// 
// 💡 초보자를 위한 설명:
// - 이 파일은 웹페이지에서 사용할 폰트와 텍스트를 설정하는 곳입니다
// - 각 섹션별로 어떤 역할을 하는지 주석으로 설명되어 있습니다
// - 수정할 때는 따옴표 안의 내용만 바꾸시면 됩니다

// ===========================================
// 1. 폰트 설정 (fonts 배열)
// ===========================================
// 웹페이지에서 사용할 폰트들을 정의합니다
// 
// 📝 수정 방법:
// - name: 폰트 선택 버튼에 표시될 이름 (사용자가 보는 이름)
// - url: 실제 폰트 파일의 위치 (assets/fonts/ 폴더 안의 파일명)
//
// 💡 예시: 새로운 폰트를 추가하려면
// {
//   name: "새폰트이름",
//   url: "assets/fonts/새폰트파일.otf"
// }
const fonts = [
  {
    name: "A",  // 폰트 선택 버튼에 "A"로 표시됨
    url: "assets/fonts/PyeonsanBetaAA-Regular.otf",  // 실제 폰트 파일 위치
  },
  {
    name: "B", 
    url: "assets/fonts/PyeonsanBetaBB-Regular.otf",
  },
  {
    name: "1A",
    url: "assets/fonts/PyeonsanBetaAA_0-Regular.otf",
  },
  {
    name: "2B",
    url: "assets/fonts/PyeonsanBetaBB_0-Regular.otf",
  }
];

// ===========================================
// 2. 예시 문구 설정 (sampleText)
// ===========================================
// 폰트 미리보기에 사용될 텍스트를 설정합니다
// 
// 📝 수정 방법:
// - 백틱(`) 안의 텍스트를 원하는 문구로 바꾸세요
// - 여러 줄로 작성하려면 그대로 엔터를 치면 됩니다
// 
// 💡 팁: 한글, 영문, 숫자, 특수문자 등 다양한 문자를 포함하면
//       폰트의 전체적인 모습을 더 잘 확인할 수 있습니다
const sampleText = `테스트; 포스트스크립트(PostScript, PS)는 어도비 시스템을 설립한 존 워낙(John Warnock)과 찰스 게시케(Charlse Geschke)가 만든 페이지 기술 언어의 일종이다. 포스트스크립트 파일은 사람이 읽을 수 있게끔 되어있으며, PCL 언어와는 달리 바이너리화되어있지 않아 텍스트편집기 등에서 ISOLatin1 언어 포맷으로 읽을 수 있고, 장치에 독립적일 수도 있다. 그러나 포스트스크립트를 지원하는 프린터나, 드라이버를 제작하는 것이 비교적 어렵고, 또한 프린터 내부적으로 해석과정을 거친 후에 바이너리화를 해야 하기 때문에 프린터 내부 프로세싱이 많이 요구된다. 1985년 애플이 처음으로 포스트스크립트 엔진을 포함한 프린터 레이저라이터를 출시했으며, 이로부터 탁상 출판의 혁명이 시작되었다. 한때는 그래픽 처리의 사실상 표준이었으나 최근에는 PDF에게 점점 그 자리를 내주고 있다. 또한 운영 체제나 응용 프로그램에서 포스트스크립트 파일을 처리하는 경우가 많기 때문에, 프린터에 포스트스크립트 엔진을 포함하는 경우도 줄고 있다.`;

// ===========================================
// 3. 초기 설정 (initialSettings)
// ===========================================
// 웹페이지가 처음 로드될 때의 기본값들을 설정합니다
// 
// 📝 각 설정값 설명:
// - textDirection: 텍스트 방향 (0=가로쓰기, 1=세로쓰기)
// - fontSize: 글자 크기 (15~45 사이의 숫자)
// - letterSpacing: 글자 간격 (-100~100 사이의 숫자, 음수면 좁아짐)
// - lineHeight: 줄 간격 (1.0~2.0 사이의 숫자, 클수록 줄이 넓어짐)
// - glyphPaddingBottom: 글리프(문자) 하단 여백 (rem 단위)
//
// 💡 수정 예시:
// - 세로쓰기로 시작하고 싶다면: textDirection: "1"
// - 글자를 크게 하고 싶다면: fontSize: 40
// - 줄 간격을 넓히고 싶다면: lineHeight: 2.0
const initialSettings = {
  textDirection: "0", // 0: 가로쓰기, 1: 세로쓰기
  fontSize: 30, // 글자 크기 (15~45)
  letterSpacing: 0, // 글자 간격 (-100~100, 0이 기본값)
  lineHeight: 1.5, // 줄 간격 (1.0~2.0, 1.5가 기본값)
  glyphPaddingBottom: 0.5 // 글리프 하단 여백 (rem 단위)
};

// ===========================================
// 4. 글리프 설정 (glyphs)
// ===========================================
// 폰트의 각종 문자들을 카테고리별로 정리한 설정입니다
// 
// 📝 구조 설명:
// - 각 카테고리마다 title(제목)과 characters(문자 목록)가 있습니다
// - title: 웹페이지에서 보여질 섹션 제목
// - characters: 해당 섹션에 표시될 문자들의 배열
//
// 💡 수정 방법:
// - title: "원하는 제목" (따옴표 안의 텍스트만 바꾸세요)
// - characters: ["문자1", "문자2", "문자3"] (대괄호 안의 문자들을 추가/삭제/수정)
//
// 💡 팁: 
// - 새로운 카테고리를 추가하려면 전체 구조를 복사해서 붙여넣으세요
// - 문자를 추가할 때는 쉼표(,)로 구분하고 따옴표("")로 감싸세요
const glyphs = {
  punctuation: {
    title: "구두점 괄호",  // 섹션 제목
    characters: [".", ",", ":", ";", "!", "?", "(", ")", "[", "]", "{", "}", "\"", "'", "-", "—", "…"]  // 표시할 문자들
  },
  symbols: {
    title: "기호",
    characters: ["@", "#", "$", "%", "&", "*", "+", "=", "/", "\\", "|", "~", "`", "^", "°", "§", "¶"]
  },
  brackets: {
    title: "문장부호",
    characters: ["「", "」", "『", "』", "〈", "〉", "《", "》", "〔", "〕", "【", "】", "〈", "〉", "「", "」", "『"]
  },
  korean: {
    title: "한글 글리프",
    characters: ["강", "결", "곶", "굴", "근", "깜", "껄", "꽤", "꾀", "낚", "내", "넓", "뇌", "능", "늡", "덕", "돌", "뒤", "딘", "땀", "딱", "뜸", "랜", "랩", "론", "룬", "밥", "버", "보", "분", "븜", "밧", "병", "붕", "비", "빨", "뽈", "빙", "삽", "석", "샐", "쉿", "식", "싸", "싹", "쓴", "암", "어", "옆", "웃", "욥", "왁", "잠", "점", "종", "줍", "질", "쫀", "꽤", "찍", "찬", "춤", "휠", "칫", "컵", "과", "쿨", "탐", "텟", "틀", "티", "틸", "팅", "퓨", "평", "꽤", "폴", "푼", "함", "혁", "홍", "훈", "훌", "휙"]
  }
};

// ===========================================
// 5. 해상도별 스케일링 설정 (scaleSettings)
// ===========================================
// 큰 화면에서 폰트가 너무 작아 보이지 않도록 확대하는 설정입니다
// 
// 📝 설정값 설명:
// - scale: 확대 비율 (숫자가 클수록 더 크게 확대됨)
// - breakpoint: 이 해상도 이상에서 확대 적용 (픽셀 단위)
//
// 💡 예시:
// - 2560px 이상의 화면에서 3.5배 확대
// - 4K 모니터나 큰 화면에서 폰트가 잘 보이도록 도와줍니다
const scaleSettings = {
  scale: 1, // 모바일에서는 확대하지 않음
  breakpoint: 2560 // 적용될 해상도 (픽셀)
};

// ===========================================
// 6. 전역 변수로 내보내기
// ===========================================
// 위에서 설정한 값들을 웹페이지의 다른 부분에서 사용할 수 있도록 내보냅니다
// 
// 💡 이 부분은 수정하지 마세요!
// - 이 코드들이 있어야 웹페이지가 설정값들을 인식할 수 있습니다
// - 만약 실수로 삭제하거나 수정하면 웹페이지가 제대로 작동하지 않을 수 있습니다
window.fonts = fonts;
window.sampleText = sampleText;
window.initialSettings = initialSettings;
window.scaleSettings = scaleSettings;
window.glyphs = glyphs;
